<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<context:component-scan base-package="cn" />


	<!-- 1.引入database.properties 配置文件 -->
	<!-- <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> 
			<property name="location"> <value>classpath:database.properties</value> </property> 
		</bean> -->
	
	<context:property-placeholder location="classpath:database.properties" />

	<!-- 2.创建dataSource数据源源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${driver}"></property>
		<property name="url" value="${url}"></property>
		<property name="username" value="${user}"></property>
		<property name="password" value="${password}"></property>
	</bean>

	<!-- 配置sessionFactory -->
	<!-- <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"> -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="hibernate.show_sql">
					true
				</prop>
				<prop key="hibernate.format_sql">
					true
				</prop>
			</props>
		</property>
		<property name="packagesToScan" value="cn.pojo" />
		
		<!-- <property name="mappingDirectoryLocations">
			<list>
				<value>classpath:cn/pojo</value>
			</list>
		</property> -->
		
	</bean>

	<!-- 6.声明式事务处理 1.创建处理事务的BEAN -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- 开启事务的注解支持 -->
	<tx:annotation-driven transaction-manager="txManager"/>
	
	<!-- 2.声明事务需要处理的规则 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="find*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>
	<!-- 3.织入事务处理 -->
	<aop:config>
		<aop:pointcut expression="execution(* cn.service..*.*(..))" id="point" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="point" />
	</aop:config>
	
</beans>